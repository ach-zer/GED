// Added by Achraf Zeroual to insert a binary document
    public static void insertDocBin(RoutingContext routingContext){
            Logger.info("Dans insertDocBin...");

            JsonObject jsonResponse = new JsonObject();
            // To receive a file from the input
            Set<FileUpload> uploads = routingContext.fileUploads();
            FileUpload fileUpload = uploads.iterator().next();
            String fileName = fileUpload.uploadedFileName();
            Buffer fileUploaded = routingContext.vertx().fileSystem().readFileBlocking(fileName);
            byte[] bytes = fileUploaded.getBytes();

            //ByteArrayInputStream bis = new ByteArrayInputStream(bytes);

            String sql = "{call dml_ged_doc_bin.ins_ged_doc_bin(?,?)}" ;

            Connection connection = new DB().getConnection();

        int idDocInserted = 0;

        try {

            ByteArrayInputStream bis = new ByteArrayInputStream(bytes);

            CallableStatement cstmt  = connection.prepareCall(sql);
            cstmt.setBinaryStream(1, bis, bytes.length);
            // Id of my DocBin
            cstmt.registerOutParameter(2, OracleTypes.NUMBER);

            int i = cstmt.executeUpdate();

            idDocInserted = cstmt.getInt(2);

            System.out.println(idDocInserted);

            System.out.println("Successful query ");

            connection.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }

        if(idDocInserted != 0)
            jsonResponse.put("idDocInserted",idDocInserted);
            routingContext.response()
                    .setStatusCode(200)
                    .putHeader("content-type", "application/json")
                    .end(Json.encode(jsonResponse));
    }

    public static void getBlobDocById(RoutingContext routingContext){
        Logger.info("Dans getBlobDocById...");

        //final JsonObject body = routingContext.getBodyAsJson();

        final String id = routingContext.request().getParam("idedocbi");

        final int idedocbi = Integer.parseInt(id);

        System.out.println("id re√ßu est : "+idedocbi);

        JsonObject jsonResponse = new JsonObject();

        String sql = "{call dml_ged_doc_bin.sel_blob_doc_bin_by_id(?,?)}";
        Connection connection = new DB().getConnection();

        Blob blob = null;
        long blobLength = 0 ;

        byte[] bytes = null;
        try {

            CallableStatement cstmt  = connection.prepareCall(sql);
            cstmt.setInt(1, idedocbi);

            cstmt.registerOutParameter(2, OracleTypes.BLOB);

            int i = cstmt.executeUpdate();

            blob = cstmt.getBlob(2);
            blobLength = blob.length();

            bytes = blob.getBytes(1, (int) blobLength);

            System.out.println("Successful query ");

            connection.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }

        if(blobLength != 0){
            Buffer buffer = Buffer.buffer(bytes);
            routingContext.response()
                    .putHeader("Content-Type","application/pdf")
                    .setStatusCode(200)
                    .putHeader("Content-Length", String.valueOf(buffer.length()))
                    .write(buffer)
                    .end();
        }
    }